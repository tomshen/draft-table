// Generated by CoffeeScript 1.6.3
var Comment, Element, Plan, Proposal, School, Supporter, db, log, methods, mongo, _;

mongo = require('mongoskin', _ = require('underscore', log = console.log));

db = mongo.db('localhost:27017/test', {
  w: 0
});

School = {};

School.create = function(school, callback) {
  if (!((school.name != null) && (school.email_domain != null))) {
    throw new Error('School.create: name or email domain was undefined');
  }
  return db.collection('schools').insert(school, function(err, docs) {
    return callback(docs[0]._id);
  });
};

School.update = function(_id, update_object) {
  var email_domain, name, plans;
  name = update_object.name, email_domain = update_object.email_domain, plans = update_object.plans;
  if (name != null) {
    db.collection('schools').updateById(_id, {
      $set: {
        name: name
      }
    });
  }
  if (email_domain != null) {
    db.collection('schools').updateById(_id, {
      $set: {
        email_domain: email_domain
      }
    });
  }
  if (plans != null) {
    return db.collection('schools').updateById(_id, {
      $set: {
        plans: plans
      }
    });
  }
};

School.get = function(school_id, callback) {
  return db.collection('schools').findById(school_id, callback);
};

School.addPlan = function(_id, object, callback) {
  return Plan.create(_id, object, callback);
};

School.addPlanById = function(school_id, plan_id) {
  return db.collection('schools').findOne(school_id, function(err, doc) {
    var plans;
    plans = doc.plans;
    plans.push(plan_id);
    return School.update(school_id, {
      plans: plans
    });
  });
};

School.removePlanById = function(school_id, plan_id) {
  return db.collection('schools').findById(school_id, function(err, doc) {
    var mod_plans;
    console.log(doc.plans);
    mod_plans = _.reject(doc.plans, function(id) {
      console.log('value');
      console.log(id.toString() === plan_id.toString());
      return id.toString() === plan_id.toString();
    });
    console.log(mod_plans);
    return School.update(school_id, {
      plans: mod_plans
    });
  });
};

Plan = {};

Plan.create = function(school_id, plan, callback) {
  return db.collection('plans').insert(plan, function(err, docs) {
    var plans;
    plans = _.pluck(docs, '_id');
    School.addPlanById(school_id, plans[0]);
    return callback(plans[0]);
  });
};

Plan.get = function(plan_id, callback) {
  return db.collection('plans').findById(plan_id, callback);
};

Element = {};

Supporter = {};

Proposal = {};

Comment = {};

methods = {
  School: School,
  Plan: Plan,
  Element: Element,
  Supporter: Supporter,
  Proposal: Proposal,
  Comment: Comment
};

module.exports = methods;
